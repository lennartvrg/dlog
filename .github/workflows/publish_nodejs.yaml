name: Publish NodeJS adapter
on:
  push:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Check NPM package version
        id: check
        uses: EndBug/version-check@v2.0.1
        with:
          diff-search: true
          file-name: ./nodejs/package.json
          file-url: https://unpkg.com/dlog-nodejs@latest/package.json
          static-checking: localIsNew

      - name: Log when changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

      - name: Log when unchanged
        if: steps.check.outputs.changed == 'false'
        run: 'echo "No version change :/"'

      - name: Setting job output
        run: echo "::set-output name=changed::${{steps.check.outputs.changed}}"

  build:
    runs-on: ${{ matrix.OS }}
    needs: check
    if: ${{ needs.check.outputs.changed == 'true' }}
    defaults:
      run:
        working-directory: ./nodejs
    strategy:
      matrix:
        include:
          - OS: macos-latest
            ARCH: x64
            CROSS: false
            TARGET: x86_64-apple-darwin
          - OS: windows-latest
            ARCH: x64
            CROSS: false
            TARGET: x86_64-pc-windows-msvc
          - OS: ubuntu-latest
            ARCH: x64
            CROSS: false
            TARGET: x86_64-unknown-linux-gnu
          - OS: ubuntu-latest
            ARCH: arm64
            CROSS: true
            TARGET: aarch64-unknown-linux-gnu
          - OS: ubuntu-latest
            ARCH: arm
            CROSS: true
            TARGET: armv7-unknown-linux-gnueabihf
    steps:
      - name: Setup cargo toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.TARGET }}
          override: true

      - name: Setup NodeJs
        uses: actions/setup-node@v1

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Build configuration
        run: echo "Building for ${{ matrix.TARGET }}"

      - name: Build rust
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.TARGET }}
          use-cross: ${{ matrix.CROSS }}

      - name: Get dependencies
        run: npm install

      - name: Install AWS SDK
        run: npm install aws-sdk

      - name: Build and upload-binary
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: npx node-pre-gyp package publish --target_arch=${{ matrix.ARCH }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./nodejs
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup NodeJs
        uses: actions/setup-node@v1

      - name: Publish package to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_ACCESS_TOKEN }}