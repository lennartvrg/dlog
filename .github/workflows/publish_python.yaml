name: Publish Python adapter
on:
  pull_request:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}
    defaults:
      run:
        working-directory: ./python
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Install pypi-version
        run: pip install pypi-version

      - name: Compare versions
        id: check
        run: |
          old=$(pypi-version --version | grep -oP '(?<=version )[^ ]*')
          new=$(awk -F "=" '/version/ {print $2}' pyproject.toml | tr -d '"' | tr -d ' ')
          updated='false'; [ $(printf "$new\n$old" | sort -V -r | grep -m1 '') == $new ] && updated='true'
          echo "::set-output name=changed::$updated"

      - name: Log when changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}!"'

      - name: Log when unchanged
        if: steps.check.outputs.changed == 'false'
        run: 'echo "No version change :/"'

  publish:
    runs-on: ${{ matrix.OS }}
    needs: check
    if: ${{ needs.check.outputs.changed == 'true' }}
    defaults:
      run:
        working-directory: ./python
    strategy:
      matrix:
        TARGET: [
            x86_64-apple-darwin,
            x86_64-pc-windows-msvc,
            x86_64-unknown-linux-gnu
        ]
        python-version: [
            3.8,
            3.9
        ]
        include:
          - OS: macos-latest
            TARGET: x86_64-apple-darwin
          - OS: windows-latest
            TARGET: x86_64-pc-windows-msvc
          - OS: ubuntu-latest
            TARGET: x86_64-unknown-linux-gnu
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install maturin
        run: python -m pip install --upgrade pip maturin

      - name: Setup cargo toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.TARGET }}
          override: true

      - name: Build configuration
        run: echo "Building for ${{ matrix.TARGET }}"

      - name: Publish
        env:
          MATURIN_PASSWORD: ${{ secrets.MATURIN_PASSWORD }}
        run: maturin publish --target ${{ matrix.TARGET }} --skip-existing --no-sdist --username ${{ secrets.MATURIN_USER }}
