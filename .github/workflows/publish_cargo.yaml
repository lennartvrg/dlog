name: Publish Cargo crates
on:
  push:
    branches:
      - master

jobs:
  dlog_core:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: dlog_core
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Compare versions
        id: check
        run: |
          old=$(curl -s 'https://crates.io/api/v1/crates/dlog_core' | jq -r '.crate.max_stable_version')
          new=$(awk -F'[ ="]+' '$1 == "version" { print $2 }' Cargo.toml)
          updated='false'; [ $(printf "$new\n$old" | sort -V -r | grep -m1 '') != $old ] && updated='true'
          echo "::set-output name=changed::$updated"

      - name: 'Publish'
        if: steps.check.outputs.changed == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish

  dlog_rs:
    runs-on: ubuntu-latest
    needs: dlog_core
    defaults:
      run:
        working-directory: dlog_rs
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Compare versions of dlog_rs
        id: check
        run: |
          old=$(curl -s 'https://crates.io/api/v1/crates/dlog_rs' | jq -r '.crate.max_stable_version')
          new=$(awk -F'[ ="]+' '$1 == "version" { print $2 }' Cargo.toml)
          updated='false'; [ $(printf "$new\n$old" | sort -V -r | grep -m1 '') != $old ] && updated='true'
          echo "::set-output name=changed::$updated"

      - name: 'Publish'
        if: steps.check.outputs.changed == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish